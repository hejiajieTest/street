<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5"
		 xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<welcome-file-list>
		<welcome-file>/dist/index.html</welcome-file>
	</welcome-file-list>

	<listener>
		<listener-class>com.tscloud.portal.utils.LoggerIntergrationListener</listener-class>
	</listener>

	<!-- ======================== 单点登录/登出 ======================== -->
	
	 <listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>

	<!--该过滤器用于实现单点登出功能，可选配置。  -->
	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
	</filter>

	<!--该过滤器负责用户的认证工作，必须启用它   -->
	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>http://127.0.0.1:8080/cas/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://127.0.0.1:50992</param-value>
		</init-param>
		<init-param>
			<param-name>ignorePattern</param-name>
			<param-value>/rest/*|/pub/*</param-value>
		</init-param>
	</filter>
	<!-- 该过滤器负责对Ticket的校验工作，必须启用它-->
	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas10TicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>http://127.0.0.1:8080/cas</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://127.0.0.1:50992</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!--该过滤器负责实现HttpServletRequest请求的包裹，
    比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。  -->
	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>

	<!--该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
     比如AssertionHolder.getAssertion().getPrincipal().getName()。-->
	<filter>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>
	</filter>

	<filter>
		<filter-name>Login Filter</filter-name>
		<filter-class>com.tscloud.portal.utils.LoginFilter</filter-class>
		<init-param>
			<param-name>ignoreUrl</param-name>
			<param-value>/rest/*|/pub/*|^/uploadLicense</param-value>
		</init-param>
	</filter>

<!--     <filter>
        <filter-name>Module Filter</filter-name>
        <filter-class>com.tscloud.portal.utils.ModuleFilter</filter-class>
    </filter> -->


	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>CAS Assertion Thread Local Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> 

<!--<filter-mapping>
		<filter-name>Login Filter</filter-name>
		<url-pattern>/*</url-pattern>
		</filter-mapping>-->	

    <!--<filter-mapping>-->
        <!--<filter-name>Module Filter</filter-name>-->
        <!--<url-pattern>*.jsp</url-pattern>-->
    <!--</filter-mapping>-->

	<!-- ======================== 单点登录/登出结束 ======================== -->


 	<servlet>
		<servlet-name>operate</servlet-name>
		<servlet-class>com.tscloud.portal.utils.DispatchServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
 	<!-- 必须加，否则dubbo会报空指针，即使DispatchServlet加载了一遍 applicationContext.xml文件-->
     <listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	 <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:configs/applicationContext.xml
		</param-value>
	</context-param>  
	<servlet>
		<servlet-name>jerseySpring</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>com.tscloud.portal.restful</param-value>
		</init-param>
		
		<load-on-startup>2</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jerseySpring</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<!--<servlet-mapping>
		<servlet-name>restServlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>-->

 	<servlet-mapping>
		<servlet-name>operate</servlet-name>
		<url-pattern>/operate.op</url-pattern>
	</servlet-mapping> 

 <!-- CORS
	<filter>
		<filter-name>CORS</filter-name>
		<filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
		<init-param>
			<param-name>cors.allowOrigin</param-name>
			<param-value>*</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportedMethods</param-name>
			<param-value>GET, POST, HEAD, PUT, DELETE</param-value>
		</init-param>
		<init-param>
			<param-name>
				cors.supportedHeaders</param-name>
			<param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified, Access-Control-Allow-Origin</param-value>
		</init-param>
		<init-param>
			<param-name>cors.exposedHeaders</param-name>
			<param-value>Set-Cookie</param-value>
		</init-param>
		<init-param>
			<param-name>cors.supportsCredentials</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CORS</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>-->
</web-app>
