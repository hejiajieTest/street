<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<context:property-placeholder location="classpath:configs/postgreSql.properties" />
	
	<!-- proxool连接池 -->
	<bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="driver" value="${jdbc.driverClassName}"/>
        <property name="driverUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>  
        <property name="password" value="${jdbc.password}"/>  
        <property name="alias" value="Pool_dbname"/>  
        <property name="maximumActiveTime" value="300000"/>  
        <property name="prototypeCount" value="0"/>  
        <property name="maximumConnectionCount" value="50"/>  
        <property name="minimumConnectionCount" value="2"/>  
        <property name="simultaneousBuildThrottle" value="50"/>  
        <property name="houseKeepingTestSql" value="select CURRENT_DATE"/>  
    </bean>
	

	<!-- 配置SqlSessionFactoryBean --> 
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
       <property name="dataSource" ref="dataSource"/>  
       <property name="configLocation" value="classpath:configs/mybatis-config.xml"/>
       <property name="mapperLocations" value="classpath:configs/mappers/postgreSql/*.xml"/>
		<property name="typeAliasesPackage" value="com.tscloud.domain.resource.entity"/>
    </bean>
    <!-- 通过扫描的模式，扫描目录在com/hoo/mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->  
    <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sessionFactory"/>
        <property name="basePackage" value="com.tscloud.resource.mapper"/>
    </bean>
    
	<!-- 事务管理器 -->
	<bean id="transactionmanager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 方法事务参数 -->
	<tx:advice id="serviceAdvice" transaction-manager="transactionmanager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Throwable"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Throwable"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	
	<!-- 配置切面 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="servicePointcut" expression="execution(* com.tscloud.resource.service..*.*(..))"/>
		<aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice"/>
	</aop:config>

	<!--加载dubbo-->
	<import resource="dubbo-provider.xml"/>
	<context:component-scan base-package="com.tscloud.resource"/>

	<!--<import resource="spring-cache.xml" />-->
</beans>